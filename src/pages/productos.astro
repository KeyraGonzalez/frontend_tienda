---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import ProductCard from '../components/ProductCard.astro';
import { productsService } from '../utils/api/products';
import type { Product, Category } from '../types/types';

// Get URL parameters
const url = Astro.url;
const searchParams = new URLSearchParams(url.search);
const categorySlug = searchParams.get('categoria');
const searchQuery = searchParams.get('search');
const isSale = searchParams.get('sale') === 'true';
const isNuevo = searchParams.get('nuevo') === 'true';
const page = parseInt(searchParams.get('page') || '1');
const limit = 12;

// Fetch products and categories
let products: Product[] = [];
let categories: Category[] = [];
let totalProducts = 0;
let totalPages = 0;

try {
  // Build filters for products
  const filters: any = {
    page,
    limit,
  };
  
  if (categorySlug) filters.category = categorySlug;
  if (searchQuery) filters.search = searchQuery;
  if (isSale) {
    filters.sale = true;
  }
  if (isNuevo) {
    filters.nuevo = true;
  }

  const [productsResponse, categoriesResponse] = await Promise.all([
    productsService.getProducts(filters),
    productsService.getCategories()
  ]);

  const productsData = productsResponse.products || productsResponse.data || [];
  products = productsData;
  
  // Handle different pagination response structures
  const paginationData: any = productsResponse.pagination || {};
  totalProducts = paginationData.total || paginationData.totalCount || paginationData.count || 0;
  totalPages = paginationData.totalPages || paginationData.last_page || paginationData.lastPage || Math.ceil(totalProducts / limit) || 1;
  
  // Debug pagination data
  console.log('游댢 Pagination data received:', paginationData);
  console.log('游댢 Calculated values:', { totalProducts, totalPages, page });
  
  // Handle different category response structures
  console.log('Categories response:', categoriesResponse);
  const categoriesData = (categoriesResponse as any)?.data || categoriesResponse || [];
  categories = Array.isArray(categoriesData) ? categoriesData : [];
  
  // Debug products data
  console.log('游댢 Products data received:', products.slice(0, 2)); // First 2 products for debugging
} catch (error) {
  console.warn('Error fetching products (using fallback):', error instanceof Error ? error.message : String(error));
  // Use empty data as fallback
  products = [];
  totalProducts = 0;
  totalPages = 0;
  categories = [];
}

// Calculate pagination helpers
const hasNextPage = page < totalPages;
const hasPrevPage = page > 1;

// Find current category
const currentCategory = Array.isArray(categories) ? categories.find(cat => cat.id === categorySlug) : null;

// Page title
let pageTitle = 'Productos - StyleHub';
if (isSale) {
  pageTitle = 'Ofertas y Descuentos - StyleHub';
} else if (isNuevo) {
  pageTitle = 'Productos Nuevos - StyleHub';
} else if (currentCategory) {
  pageTitle = `${currentCategory.name} - StyleHub`;
} else if (searchQuery) {
  pageTitle = `B칰squeda: "${searchQuery}" - StyleHub`;
}
---

<Layout 
  title={pageTitle}
  description={currentCategory ? `Descubre nuestra colecci칩n de ${currentCategory.name.toLowerCase()}` : "Explora todos nuestros productos de moda"}
>
  <Header />
  
  <main class="min-h-screen bg-gray-50">
    <!-- Breadcrumb -->
    <div class="bg-white border-b border-gray-200">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4">
        <nav class="flex" aria-label="Breadcrumb">
          <ol class="flex items-center space-x-2 text-sm">
            <li>
              <a href="/" class="text-gray-500 hover:text-black font-medium tracking-wide uppercase">Inicio</a>
            </li>
            <li>
              <svg class="h-4 w-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
              </svg>
            </li>
            <li>
              <a href="/productos" class="text-gray-500 hover:text-black font-medium tracking-wide uppercase">Productos</a>
            </li>
            {currentCategory && (
              <>
                <li>
                  <svg class="h-4 w-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                  </svg>
                </li>
                <li>
                  <span class="text-black font-bold tracking-wide uppercase">{currentCategory.name}</span>
                </li>
              </>
            )}
          </ol>
        </nav>
      </div>
    </div>

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <div class="lg:grid lg:grid-cols-4 lg:gap-8">
        <!-- Sidebar Filters -->
        <aside class="hidden lg:block">
          <div class="bg-white rounded-lg shadow-sm p-6 sticky top-24">
            <h3 class="text-lg font-semibold text-neutral-900 mb-4">Filtros</h3>
            
          <!-- Categories Filter -->
          <div class="mb-6">
            <h4 class="text-sm font-medium text-black mb-3 tracking-wide uppercase">Categor칤as</h4>
            <div class="space-y-2" data-category-filters>
              <!-- Las categor칤as se cargar치n din치micamente -->
            </div>
          </div>

          <!-- Price Filter -->
          <div class="mb-6">
            <h4 class="text-sm font-medium text-black mb-3 tracking-wide uppercase">Precio</h4>
            <div class="space-y-2">
              <label class="flex items-center">
                <input type="checkbox" name="price-range" value="0-50" class="rounded border-black text-black focus:ring-black" />
                <span class="ml-2 text-sm text-gray-600">Menos de $50</span>
              </label>
              <label class="flex items-center">
                <input type="checkbox" name="price-range" value="50-100" class="rounded border-black text-black focus:ring-black" />
                <span class="ml-2 text-sm text-gray-600">$50 - $100</span>
              </label>
              <label class="flex items-center">
                <input type="checkbox" name="price-range" value="100-200" class="rounded border-black text-black focus:ring-black" />
                <span class="ml-2 text-sm text-gray-600">$100 - $200</span>
              </label>
              <label class="flex items-center">
                <input type="checkbox" name="price-range" value="200-more" class="rounded border-black text-black focus:ring-black" />
                <span class="ml-2 text-sm text-gray-600">M치s de $200</span>
              </label>
            </div>
          </div>

          <!-- Brand Filter -->
          <div class="mb-6">
            <h4 class="text-sm font-medium text-black mb-3 tracking-wide uppercase">Marca</h4>
            <div class="space-y-2">
              <label class="flex items-center">
                <input type="checkbox" name="brand" value="Nike" class="rounded border-black text-black focus:ring-black" />
                <span class="ml-2 text-sm text-gray-600">Nike</span>
              </label>
              <label class="flex items-center">
                <input type="checkbox" name="brand" value="Adidas" class="rounded border-black text-black focus:ring-black" />
                <span class="ml-2 text-sm text-gray-600">Adidas</span>
              </label>
              <label class="flex items-center">
                <input type="checkbox" name="brand" value="Zara" class="rounded border-black text-black focus:ring-black" />
                <span class="ml-2 text-sm text-gray-600">Zara</span>
              </label>
              <label class="flex items-center">
                <input type="checkbox" name="brand" value="H&M" class="rounded border-black text-black focus:ring-black" />
                <span class="ml-2 text-sm text-gray-600">H&M</span>
              </label>
            </div>
          </div>

          <!-- Clear Filters -->
          <button data-clear-filters class="w-full bg-gray-100 text-black py-2 px-4 rounded-lg hover:bg-gray-200 transition-colors text-sm font-medium border-2 border-black tracking-wide uppercase">
            Limpiar filtros
          </button>
          </div>
        </aside>

        <!-- Main Content -->
        <div class="lg:col-span-3">
          <!-- Header -->
          <div class="bg-white rounded-lg shadow-sm p-6 mb-6">
            <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between">
              <div>
                <h1 class="text-2xl font-bold text-black mb-2 tracking-wide uppercase">
                  {isSale ? 'Ofertas y Descuentos' : isNuevo ? 'Productos Nuevos' : currentCategory ? currentCategory.name : searchQuery ? `Resultados para "${searchQuery}"` : 'Todos los Productos'}
                </h1>
                <p class="text-gray-600" data-results-counter>
                  {totalProducts} {totalProducts === 1 ? 'producto encontrado' : 'productos encontrados'}
                </p>
              </div>
              
              <!-- Sort Options -->
              <div class="mt-4 sm:mt-0">
                <select data-sort class="border-2 border-black rounded-lg px-3 py-2 text-sm focus:ring-2 focus:ring-black focus:border-black font-medium tracking-wide uppercase">
                  <option value="featured">Destacados</option>
                  <option value="price-asc">Precio: Menor a Mayor</option>
                  <option value="price-desc">Precio: Mayor a Menor</option>
                  <option value="newest">M치s Recientes</option>
                  <option value="name">Nombre A-Z</option>
                </select>
              </div>
            </div>
          </div>

          <!-- Mobile Filter Button -->
          <div class="lg:hidden mb-6">
            <button data-mobile-filters class="w-full bg-white border-2 border-black rounded-lg px-4 py-2 text-sm font-medium text-black hover:bg-gray-50 transition-colors tracking-wide uppercase">
              <svg class="inline-block w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4"></path>
              </svg>
              Filtros
            </button>
          </div>

          <!-- Products Grid -->
          <div data-products-grid class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
            {/* Los productos se cargar치n din치micamente */}
          </div>

          <!-- Pagination -->
          <div data-pagination class="bg-white rounded-lg shadow-sm border-2 border-black p-6">
            <!-- La paginaci칩n se cargar치 din치micamente -->
          </div>
        </div>
      </div>
    </div>
  </main>

  <!-- Mobile Filter Modal -->
  <div data-mobile-filter-modal class="hidden fixed inset-0 z-50 overflow-y-auto">
    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
      <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity"></div>
      
      <div class="inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6">
        <div class="flex items-center justify-between mb-4">
          <h3 class="text-lg font-bold text-black tracking-wide uppercase">Filtros</h3>
          <button data-close-mobile-filters class="text-gray-400 hover:text-gray-600">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>
        
        <div class="space-y-6">
          <!-- Mobile Categories -->
          <div>
            <h4 class="text-sm font-medium text-black mb-3 tracking-wide uppercase">Categor칤as</h4>
            <div class="space-y-2" data-category-filters-mobile>
              <!-- Las categor칤as se cargar치n din치micamente -->
            </div>
          </div>

          <!-- Mobile Price Filter -->
          <div>
            <h4 class="text-sm font-medium text-black mb-3 tracking-wide uppercase">Precio</h4>
            <div class="space-y-2">
              <label class="flex items-center">
                <input type="checkbox" name="price-range" value="0-50" class="rounded border-black text-black focus:ring-black" />
                <span class="ml-2 text-sm text-gray-600">Menos de $50</span>
              </label>
              <label class="flex items-center">
                <input type="checkbox" name="price-range" value="50-100" class="rounded border-black text-black focus:ring-black" />
                <span class="ml-2 text-sm text-gray-600">$50 - $100</span>
              </label>
              <label class="flex items-center">
                <input type="checkbox" name="price-range" value="100-200" class="rounded border-black text-black focus:ring-black" />
                <span class="ml-2 text-sm text-gray-600">$100 - $200</span>
              </label>
              <label class="flex items-center">
                <input type="checkbox" name="price-range" value="200-more" class="rounded border-black text-black focus:ring-black" />
                <span class="ml-2 text-sm text-gray-600">M치s de $200</span>
              </label>
            </div>
          </div>

          <!-- Mobile Brand Filter -->
          <div>
            <h4 class="text-sm font-medium text-black mb-3 tracking-wide uppercase">Marca</h4>
            <div class="space-y-2">
              <label class="flex items-center">
                <input type="checkbox" name="brand" value="Nike" class="rounded border-black text-black focus:ring-black" />
                <span class="ml-2 text-sm text-gray-600">Nike</span>
              </label>
              <label class="flex items-center">
                <input type="checkbox" name="brand" value="Adidas" class="rounded border-black text-black focus:ring-black" />
                <span class="ml-2 text-sm text-gray-600">Adidas</span>
              </label>
              <label class="flex items-center">
                <input type="checkbox" name="brand" value="Zara" class="rounded border-black text-black focus:ring-black" />
                <span class="ml-2 text-sm text-gray-600">Zara</span>
              </label>
              <label class="flex items-center">
                <input type="checkbox" name="brand" value="H&M" class="rounded border-black text-black focus:ring-black" />
                <span class="ml-2 text-sm text-gray-600">H&M</span>
              </label>
            </div>
          </div>
        </div>
        
        <div class="mt-6 flex space-x-3">
          <button data-clear-filters class="flex-1 bg-gray-100 text-black py-2 px-4 rounded-lg hover:bg-gray-200 transition-colors text-sm font-medium border-2 border-black tracking-wide uppercase">
            Limpiar
          </button>
          <button data-close-mobile-filters class="flex-1 bg-black text-white py-2 px-4 rounded-lg hover:bg-gray-800 transition-colors text-sm font-medium tracking-wide uppercase">
            Aplicar
          </button>
        </div>
      </div>
    </div>
  </div>

  <Footer />
</Layout>

<script>
  import { initializeProductsFilters } from '../scripts/productos';

  document.addEventListener('DOMContentLoaded', async function() {
    await initializeProductsFilters();
  });
</script>
